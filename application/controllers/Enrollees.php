<?php
defined('BASEPATH') or exit('No direct script access allowed');

use public_variables as pv;

class Enrollees extends CI_Controller
{

    public function __construct()
    {
        parent::__construct();
        if (!$this->session->userdata('logged_in'))
        {
            // Allow some methods?
            $allowed = array();
            if (!in_array($this->router->fetch_method(), $allowed))
            {
                redirect('login');
            }

        }

        $this->load->library('form_validation');
        $this->load->library('table');
        $this->load->model('Enrollee_model');
        $this->load->helper('array');
    }

    public function index()
    {
        $this->charts();
    }

    public function charts()
    {

        $from = date('Y-m-01');
        $to = date('Y-m-d', strtotime("+1 months", strtotime($from)));
        $sumOf_Enrollees = $this->Enrollee_model->sumOfEnrollees($from, $to, 'course_abbr');

        $this->table->set_template(pv::UI_TABLE_TEMPLATE);
        $this->table->set_heading(array('Name', 'Age', 'Gender', 'Contact No.', 'Email', 'Applied Courses'));

        $cols = "CONCAT(last_name,', ',first_name,' ',middle_name), age, gender, phone_number, email,applied_courses";
        $where = "(date_applied BETWEEN '$from' AND '$to')";
        $query = $this->Enrollee_model->getEnrollees($cols, $where);

        $data['courseInquiry_chart'] = $sumOf_Enrollees;

        $data['dateRange'] = " From <strong>" . date('M Y') . "</strong> to <strong>" . date('M Y', strtotime("+1 months", strtotime($from))) . "</strong> ";
        $data['tblEnrollees'] = $this->table->generate($query);
        template::enrollees('charts', $data);
    }

    public function reports()
    {
        if ($_POST)
        {

            if(isset($_POST['save_pdf_form'])){
                $this->generateReport($_POST);;
            }

            $whListed = ['report_label', 'columns', 'sort_column', 'sort_by', 'range_from', 'range_to'];
            $_POST = whList($_POST, $whListed);

            $this->security->xss_clean($_POST);

            if ($this->form_validation->run('report_filter'))
            {
                if ($this->dateIsBefore(testVar($_POST['range_from']), ($_POST['range_to'])))
                {
                    prompt::error("Invalid Date Range.");
                    redirect(base_url('enrollees/reports#'));
                }

                if (in_array('name', $_POST['columns']))
                {
                    $pos = array_search('name', $_POST['columns']);
                    $colArray = array_insert($_POST['columns'], $pos, array("CONCAT(last_name,', ',first_name,' ',middle_name) as \"name\", "));

                    $colArray = array_diff($colArray, ['name']);
                    $cols = implode(', ', $colArray);

                }
                else
                {
                    $cols = implode(', ', $_POST['columns']);
                }

                $this->table->set_template(pv::UI_TABLE_TEMPLATE);
                $this->table->set_heading(str_start_case($_POST['columns']));

                $sortBy = testVar($_POST['sort_by']) ? $_POST['sort_by'] : 'ASC';
                $order = $_POST['sort_column'] . ' ' . $sortBy;

                $from = $_POST['range_from'];
                $to = $_POST['range_to'];
                $where = "(date_applied BETWEEN '$from' AND '$to')";

                $result = $this->Enrollee_model->getEnrollees($cols, $where, '', $order);
                $data['tblReport'] = $this->table->generate($result);

                $data['reportLabel'] = str_start_case($_POST['report_label']);

                $data['dateRange'] = 'From <strong>' . $_POST['range_from'] . '</strong> to <strong>' . $_POST['range_to'] . '</strong>';

                // ----------
                $data['tblColumns'] = $_POST['columns'];
                $this->ready_pdf_data($data, $result);
            }
        }

        $cols = $this->Enrollee_model->db->list_fields('enrollees');
        $cols = array_insert($cols, 1, "name");
        $data['cols'] = $cols;
        template::enrollees('reports', $data);
    }

    public function dateIsBefore($ownDate, $start_date)
    {
        $ownDate = $this->security->xss_clean($ownDate);
        $start_date = $this->security->xss_clean($start_date);

        $result = isBefore($start_date, $ownDate);

        if ($result != 1)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    /**
     * Recreates the table on the view and save in a session. the html is converted to pdf.
     * @param  string $data           any data needed to create the html
     * @param  string $tableArray     the Array generated by a query using the CI querybuilder
     * @return [type] [description]
     */
    private function ready_pdf_data($data = '', $tableArray = '')
    {

        $this->table->set_template(pv::UI_TABLE_PDF_REPORTS_TEMPLATE);
        $this->table->set_heading(str_start_case(testVar($data['tblColumns'])));
        $table = $this->table->generate(testVar($tableArray));

        $content = 
        '
        <div style="line-height: 10px;"> </div>

        <div id="pdfReport_Table">
        <h3 style="text-align:center;"> BISD WEBSITE ENROLLEES </h3>
        
        <div>
        <table style="width:100%;">
            <tbody><tr><td>
                <h5>
                ' . testVar($data['reportLabel'], '(Report Table)') . '
                </h5>
            </td>
            <td style="text-align:right;">
                <h5>
                ' . testVar($data['dateRange'], date('M d, Y')) . '
                </h5>
            </td></tr><tbody>
        </table> 
        </div>

        <div>
            ' . testVar($table) . '
       </div>
        </div>';

        $content = pv::get_pdf_header().$content;
        $this->session->set_userdata('current_pdf_content', $content);
    }

    public function generateReport($POST=array())
    {
        if($POST){
            $whListed = ['save_pdf_form', 'file_name', 'paper_size','orientation'];
            $POST = whList($POST, $whListed);


            if(!empty($POST['file_name'])){
                if ($_SESSION['current_pdf_content'])
                {
                    $POST['content'] = $_SESSION['current_pdf_content'];
                }


                $data['pdf'] = $POST;
                $this->load->library('Pdf');
                $this->load->view('pdf/pdfreport', $data);
            }else{
                prompt::error("Please Specify the Report Name.");
                redirect(current_url());
            }
        }
        
    }

}
